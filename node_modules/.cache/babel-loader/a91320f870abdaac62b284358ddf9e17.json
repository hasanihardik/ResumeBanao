{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hasan\\\\Documents\\\\visual studio code\\\\Projects\\\\ResumeBanao\\\\src\\\\Components\\\\ProjectsForm.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsForm = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, _ref) => {\n  _s();\n  const [projects, setProjects] = useState([{\n    name: '',\n    from: '',\n    to: '',\n    bulletPt1: '',\n    bulletPt2: '',\n    bulletPt3: ''\n  }]);\n  const [entered, setEntered] = useState(false);\n  const [isOptional, setIsOptional] = useState(false); // State to track if the form is optional\n\n  const addHandler = () => {\n    let newProject = {\n      name: '',\n      from: '',\n      to: '',\n      bulletPt1: '',\n      bulletPt2: '',\n      bulletPt3: ''\n    };\n    setProjects([...projects, newProject]);\n  };\n  const removeHandler = idx => {\n    let data = [...projects];\n    data.splice(idx, 1);\n    setProjects(data);\n  };\n  const handleFormChange = (idx, e) => {\n    let data = [...projects];\n    data[idx][e.target.name] = e.target.value;\n    setProjects(data);\n  };\n  function validateForm(d) {\n    let ans = true;\n    let data = [...d];\n    for (let i = 0; i < data.length; i++) {\n      if (!data[i]['name'] || !data[i]['from'] || !data[i]['to'] || !data[i]['bulletPt1'] || !data[i]['bulletPt2'] || !data[i]['bulletPt3']) {\n        ans = false;\n      }\n    }\n    return ans;\n  }\n  useImperativeHandle(_ref, () => ({\n    getProjectsDeets: () => {\n      return projects;\n    }\n  }));\n  function submitHandler(e) {\n    e.preventDefault();\n    setEntered(true);\n    if (isOptional || validateForm(projects)) {\n      props.next();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Projects Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isOptional,\n            onChange: () => setIsOptional(!isOptional)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), \"Skip this section (Optional)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), !isOptional && projects.map((input, idx) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [!input.name && entered && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Project Name is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Project Name\",\n            value: input.name,\n            name: \"name\",\n            onChange: e => handleFormChange(idx, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), !input.from && entered && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"From is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"From\",\n            value: input.from,\n            name: \"from\",\n            onChange: e => handleFormChange(idx, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), !input.to && entered && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"To is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"To\",\n            value: input.to,\n            name: \"to\",\n            onChange: e => handleFormChange(idx, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), !input.bulletPt1 && entered && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Description Point 1 is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description Point 1\",\n            value: input.bulletPt1,\n            name: \"bulletPt1\",\n            onChange: e => handleFormChange(idx, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), !input.bulletPt2 && entered && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Description Point 2 is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description Point 2\",\n            value: input.bulletPt2,\n            name: \"bulletPt2\",\n            onChange: e => handleFormChange(idx, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), !input.bulletPt3 && entered && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Description Point 3 is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description Point 3\",\n            value: input.bulletPt3,\n            name: \"bulletPt3\",\n            onChange: e => handleFormChange(idx, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), projects.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove\",\n            onClick: e => {\n              e.preventDefault();\n              removeHandler(idx);\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this);\n      }), !isOptional && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add\",\n        onClick: e => {\n          e.preventDefault();\n          addHandler();\n        },\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"submit-btn\",\n        type: \"submit\",\n        value: isOptional ? 'Next' : 'Submit & Next',\n        onClick: e => submitHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}, \"gWg1VHSAHEdLn3ke4Od6zbPfg3I=\")), \"gWg1VHSAHEdLn3ke4Od6zbPfg3I=\");\n_c2 = ProjectsForm;\nexport default ProjectsForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectsForm$forwardRef\");\n$RefreshReg$(_c2, \"ProjectsForm\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useState","ProjectsForm","props","_ref","projects","setProjects","name","from","to","bulletPt1","bulletPt2","bulletPt3","entered","setEntered","isOptional","setIsOptional","addHandler","newProject","removeHandler","idx","data","splice","handleFormChange","e","target","value","validateForm","d","ans","i","length","getProjectsDeets","submitHandler","preventDefault","next","map","input"],"sources":["C:/Users/hasan/Documents/visual studio code/Projects/ResumeBanao/src/Components/ProjectsForm.js"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState } from 'react';\n\nconst ProjectsForm = forwardRef((props, _ref) => {\n    const [projects, setProjects] = useState([\n        { name: '', from: '', to: '', bulletPt1: '', bulletPt2: '', bulletPt3: '' }\n    ]);\n    const [entered, setEntered] = useState(false);\n    const [isOptional, setIsOptional] = useState(false); // State to track if the form is optional\n\n    const addHandler = () => {\n        let newProject = { name: '', from: '', to: '', bulletPt1: '', bulletPt2: '', bulletPt3: '' };\n        setProjects([...projects, newProject]);\n    }\n\n    const removeHandler = (idx) => {\n        let data = [...projects];\n        data.splice(idx, 1);\n        setProjects(data);\n    }\n\n    const handleFormChange = (idx, e) => {\n        let data = [...projects];\n        data[idx][e.target.name] = e.target.value;\n        setProjects(data);\n    }\n\n    function validateForm(d) {\n        let ans = true;\n        let data = [...d];\n\n        for (let i = 0; i < data.length; i++) {\n            if (!data[i]['name'] || !data[i]['from'] || !data[i]['to'] || !data[i]['bulletPt1'] || !data[i]['bulletPt2'] || !data[i]['bulletPt3']) {\n                ans = false;\n            }\n        }\n        return ans;\n    }\n\n    useImperativeHandle(_ref, () => ({\n        getProjectsDeets: () => {\n            return projects;\n        },\n    }));\n\n    function submitHandler(e) {\n        e.preventDefault();\n        setEntered(true);\n\n        if (isOptional || validateForm(projects)) {\n            props.next();\n        }\n    }\n\n    return (\n        <div>\n            <form>\n                <h3>Projects Details</h3>\n\n                {/* Checkbox to make this section optional */}\n                <div>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={isOptional}\n                            onChange={() => setIsOptional(!isOptional)}\n                        />\n                        Skip this section (Optional)\n                    </label>\n                </div>\n\n                {!isOptional && projects.map((input, idx) => {\n                    return (\n                        <React.Fragment key={idx}>\n                            {!input.name && entered && (<span>Project Name is required</span>)}\n                            <input\n                                type='text'\n                                placeholder='Project Name'\n                                value={input.name}\n                                name='name'\n                                onChange={(e) => handleFormChange(idx, e)}\n                            />\n\n                            {!input.from && entered && (<span>From is required</span>)}\n                            <input\n                                type='text'\n                                placeholder='From'\n                                value={input.from}\n                                name='from'\n                                onChange={(e) => handleFormChange(idx, e)}\n                            />\n\n                            {!input.to && entered && (<span>To is required</span>)}\n                            <input\n                                type='text'\n                                placeholder='To'\n                                value={input.to}\n                                name='to'\n                                onChange={(e) => handleFormChange(idx, e)}\n                            />\n\n                            {!input.bulletPt1 && entered && (<span>Description Point 1 is required</span>)}\n                            <input\n                                type='text'\n                                placeholder='Description Point 1'\n                                value={input.bulletPt1}\n                                name='bulletPt1'\n                                onChange={(e) => handleFormChange(idx, e)}\n                            />\n\n                            {!input.bulletPt2 && entered && (<span>Description Point 2 is required</span>)}\n                            <input\n                                type='text'\n                                placeholder='Description Point 2'\n                                value={input.bulletPt2}\n                                name='bulletPt2'\n                                onChange={(e) => handleFormChange(idx, e)}\n                            />\n\n                            {!input.bulletPt3 && entered && (<span>Description Point 3 is required</span>)}\n                            <input\n                                type='text'\n                                placeholder='Description Point 3'\n                                value={input.bulletPt3}\n                                name='bulletPt3'\n                                onChange={(e) => handleFormChange(idx, e)}\n                            />\n\n                            {projects.length > 1 && (\n                                <button className=\"remove\" onClick={(e) => { e.preventDefault(); removeHandler(idx); }}>\n                                    Remove\n                                </button>\n                            )}\n                        </React.Fragment>\n                    );\n                })}\n\n                {!isOptional && (\n                    <button className=\"add\" onClick={(e) => { e.preventDefault(); addHandler(); }}>\n                        Add Project\n                    </button>\n                )}\n\n                <input\n                    className='submit-btn'\n                    type='submit'\n                    value={isOptional ? 'Next' : 'Submit & Next'}\n                    onClick={(e) => submitHandler(e)}\n                />\n            </form>\n        </div>\n    );\n});\n\nexport default ProjectsForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}